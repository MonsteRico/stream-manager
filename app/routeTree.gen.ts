/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as NewImport } from './routes/new'
import { Route as DashboardImport } from './routes/_dashboard'
import { Route as IndexImport } from './routes/index'
import { Route as OverlaysOverlayImport } from './routes/overlays/_overlay'
import { Route as DashboardManageTeamsImport } from './routes/_dashboard/manageTeams'
import { Route as DashboardManageCastersImport } from './routes/_dashboard/manageCasters'
import { Route as DashboardSessionSessionIdImport } from './routes/_dashboard/session.$sessionId'
import { Route as OverlaysOverlaySessionIdWaitingForNextImport } from './routes/overlays/_overlay.$sessionId/waitingForNext'
import { Route as OverlaysOverlaySessionIdThanksImport } from './routes/overlays/_overlay.$sessionId/thanks'
import { Route as OverlaysOverlaySessionIdStartingSoonImport } from './routes/overlays/_overlay.$sessionId/startingSoon'
import { Route as OverlaysOverlaySessionIdSingleCameraImport } from './routes/overlays/_overlay.$sessionId/singleCamera'
import { Route as OverlaysOverlaySessionIdMatchImport } from './routes/overlays/_overlay.$sessionId/match'
import { Route as OverlaysOverlaySessionIdMapsImport } from './routes/overlays/_overlay.$sessionId/maps'
import { Route as OverlaysOverlaySessionIdCastersSingleCameraImport } from './routes/overlays/_overlay.$sessionId/castersSingleCamera'
import { Route as OverlaysOverlaySessionIdCastersImport } from './routes/overlays/_overlay.$sessionId/casters'
import { Route as OverlaysOverlaySessionIdBrbImport } from './routes/overlays/_overlay.$sessionId/brb'
import { Route as OverlaysOverlaySessionIdVictoryWinnerImport } from './routes/overlays/_overlay.$sessionId/victory.$winner'

// Create Virtual Routes

const OverlaysImport = createFileRoute('/overlays')()

// Create/Update Routes

const OverlaysRoute = OverlaysImport.update({
  path: '/overlays',
  getParentRoute: () => rootRoute,
} as any)

const NewRoute = NewImport.update({
  path: '/new',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const OverlaysOverlayRoute = OverlaysOverlayImport.update({
  id: '/_overlay',
  getParentRoute: () => OverlaysRoute,
} as any)

const DashboardManageTeamsRoute = DashboardManageTeamsImport.update({
  path: '/manageTeams',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardManageCastersRoute = DashboardManageCastersImport.update({
  path: '/manageCasters',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardSessionSessionIdRoute = DashboardSessionSessionIdImport.update({
  path: '/session/$sessionId',
  getParentRoute: () => DashboardRoute,
} as any)

const OverlaysOverlaySessionIdWaitingForNextRoute =
  OverlaysOverlaySessionIdWaitingForNextImport.update({
    path: '/$sessionId/waitingForNext',
    getParentRoute: () => OverlaysOverlayRoute,
  } as any)

const OverlaysOverlaySessionIdThanksRoute =
  OverlaysOverlaySessionIdThanksImport.update({
    path: '/$sessionId/thanks',
    getParentRoute: () => OverlaysOverlayRoute,
  } as any)

const OverlaysOverlaySessionIdStartingSoonRoute =
  OverlaysOverlaySessionIdStartingSoonImport.update({
    path: '/$sessionId/startingSoon',
    getParentRoute: () => OverlaysOverlayRoute,
  } as any)

const OverlaysOverlaySessionIdSingleCameraRoute =
  OverlaysOverlaySessionIdSingleCameraImport.update({
    path: '/$sessionId/singleCamera',
    getParentRoute: () => OverlaysOverlayRoute,
  } as any)

const OverlaysOverlaySessionIdMatchRoute =
  OverlaysOverlaySessionIdMatchImport.update({
    path: '/$sessionId/match',
    getParentRoute: () => OverlaysOverlayRoute,
  } as any)

const OverlaysOverlaySessionIdMapsRoute =
  OverlaysOverlaySessionIdMapsImport.update({
    path: '/$sessionId/maps',
    getParentRoute: () => OverlaysOverlayRoute,
  } as any)

const OverlaysOverlaySessionIdCastersSingleCameraRoute =
  OverlaysOverlaySessionIdCastersSingleCameraImport.update({
    path: '/$sessionId/castersSingleCamera',
    getParentRoute: () => OverlaysOverlayRoute,
  } as any)

const OverlaysOverlaySessionIdCastersRoute =
  OverlaysOverlaySessionIdCastersImport.update({
    path: '/$sessionId/casters',
    getParentRoute: () => OverlaysOverlayRoute,
  } as any)

const OverlaysOverlaySessionIdBrbRoute =
  OverlaysOverlaySessionIdBrbImport.update({
    path: '/$sessionId/brb',
    getParentRoute: () => OverlaysOverlayRoute,
  } as any)

const OverlaysOverlaySessionIdVictoryWinnerRoute =
  OverlaysOverlaySessionIdVictoryWinnerImport.update({
    path: '/$sessionId/victory/$winner',
    getParentRoute: () => OverlaysOverlayRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/new': {
      id: '/new'
      path: '/new'
      fullPath: '/new'
      preLoaderRoute: typeof NewImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard/manageCasters': {
      id: '/_dashboard/manageCasters'
      path: '/manageCasters'
      fullPath: '/manageCasters'
      preLoaderRoute: typeof DashboardManageCastersImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/manageTeams': {
      id: '/_dashboard/manageTeams'
      path: '/manageTeams'
      fullPath: '/manageTeams'
      preLoaderRoute: typeof DashboardManageTeamsImport
      parentRoute: typeof DashboardImport
    }
    '/overlays': {
      id: '/overlays'
      path: '/overlays'
      fullPath: '/overlays'
      preLoaderRoute: typeof OverlaysImport
      parentRoute: typeof rootRoute
    }
    '/overlays/_overlay': {
      id: '/overlays/_overlay'
      path: '/overlays'
      fullPath: '/overlays'
      preLoaderRoute: typeof OverlaysOverlayImport
      parentRoute: typeof OverlaysRoute
    }
    '/_dashboard/session/$sessionId': {
      id: '/_dashboard/session/$sessionId'
      path: '/session/$sessionId'
      fullPath: '/session/$sessionId'
      preLoaderRoute: typeof DashboardSessionSessionIdImport
      parentRoute: typeof DashboardImport
    }
    '/overlays/_overlay/$sessionId/brb': {
      id: '/overlays/_overlay/$sessionId/brb'
      path: '/$sessionId/brb'
      fullPath: '/overlays/$sessionId/brb'
      preLoaderRoute: typeof OverlaysOverlaySessionIdBrbImport
      parentRoute: typeof OverlaysOverlayImport
    }
    '/overlays/_overlay/$sessionId/casters': {
      id: '/overlays/_overlay/$sessionId/casters'
      path: '/$sessionId/casters'
      fullPath: '/overlays/$sessionId/casters'
      preLoaderRoute: typeof OverlaysOverlaySessionIdCastersImport
      parentRoute: typeof OverlaysOverlayImport
    }
    '/overlays/_overlay/$sessionId/castersSingleCamera': {
      id: '/overlays/_overlay/$sessionId/castersSingleCamera'
      path: '/$sessionId/castersSingleCamera'
      fullPath: '/overlays/$sessionId/castersSingleCamera'
      preLoaderRoute: typeof OverlaysOverlaySessionIdCastersSingleCameraImport
      parentRoute: typeof OverlaysOverlayImport
    }
    '/overlays/_overlay/$sessionId/maps': {
      id: '/overlays/_overlay/$sessionId/maps'
      path: '/$sessionId/maps'
      fullPath: '/overlays/$sessionId/maps'
      preLoaderRoute: typeof OverlaysOverlaySessionIdMapsImport
      parentRoute: typeof OverlaysOverlayImport
    }
    '/overlays/_overlay/$sessionId/match': {
      id: '/overlays/_overlay/$sessionId/match'
      path: '/$sessionId/match'
      fullPath: '/overlays/$sessionId/match'
      preLoaderRoute: typeof OverlaysOverlaySessionIdMatchImport
      parentRoute: typeof OverlaysOverlayImport
    }
    '/overlays/_overlay/$sessionId/singleCamera': {
      id: '/overlays/_overlay/$sessionId/singleCamera'
      path: '/$sessionId/singleCamera'
      fullPath: '/overlays/$sessionId/singleCamera'
      preLoaderRoute: typeof OverlaysOverlaySessionIdSingleCameraImport
      parentRoute: typeof OverlaysOverlayImport
    }
    '/overlays/_overlay/$sessionId/startingSoon': {
      id: '/overlays/_overlay/$sessionId/startingSoon'
      path: '/$sessionId/startingSoon'
      fullPath: '/overlays/$sessionId/startingSoon'
      preLoaderRoute: typeof OverlaysOverlaySessionIdStartingSoonImport
      parentRoute: typeof OverlaysOverlayImport
    }
    '/overlays/_overlay/$sessionId/thanks': {
      id: '/overlays/_overlay/$sessionId/thanks'
      path: '/$sessionId/thanks'
      fullPath: '/overlays/$sessionId/thanks'
      preLoaderRoute: typeof OverlaysOverlaySessionIdThanksImport
      parentRoute: typeof OverlaysOverlayImport
    }
    '/overlays/_overlay/$sessionId/waitingForNext': {
      id: '/overlays/_overlay/$sessionId/waitingForNext'
      path: '/$sessionId/waitingForNext'
      fullPath: '/overlays/$sessionId/waitingForNext'
      preLoaderRoute: typeof OverlaysOverlaySessionIdWaitingForNextImport
      parentRoute: typeof OverlaysOverlayImport
    }
    '/overlays/_overlay/$sessionId/victory/$winner': {
      id: '/overlays/_overlay/$sessionId/victory/$winner'
      path: '/$sessionId/victory/$winner'
      fullPath: '/overlays/$sessionId/victory/$winner'
      preLoaderRoute: typeof OverlaysOverlaySessionIdVictoryWinnerImport
      parentRoute: typeof OverlaysOverlayImport
    }
  }
}

// Create and export the route tree

interface DashboardRouteChildren {
  DashboardManageCastersRoute: typeof DashboardManageCastersRoute
  DashboardManageTeamsRoute: typeof DashboardManageTeamsRoute
  DashboardSessionSessionIdRoute: typeof DashboardSessionSessionIdRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardManageCastersRoute: DashboardManageCastersRoute,
  DashboardManageTeamsRoute: DashboardManageTeamsRoute,
  DashboardSessionSessionIdRoute: DashboardSessionSessionIdRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

interface OverlaysOverlayRouteChildren {
  OverlaysOverlaySessionIdBrbRoute: typeof OverlaysOverlaySessionIdBrbRoute
  OverlaysOverlaySessionIdCastersRoute: typeof OverlaysOverlaySessionIdCastersRoute
  OverlaysOverlaySessionIdCastersSingleCameraRoute: typeof OverlaysOverlaySessionIdCastersSingleCameraRoute
  OverlaysOverlaySessionIdMapsRoute: typeof OverlaysOverlaySessionIdMapsRoute
  OverlaysOverlaySessionIdMatchRoute: typeof OverlaysOverlaySessionIdMatchRoute
  OverlaysOverlaySessionIdSingleCameraRoute: typeof OverlaysOverlaySessionIdSingleCameraRoute
  OverlaysOverlaySessionIdStartingSoonRoute: typeof OverlaysOverlaySessionIdStartingSoonRoute
  OverlaysOverlaySessionIdThanksRoute: typeof OverlaysOverlaySessionIdThanksRoute
  OverlaysOverlaySessionIdWaitingForNextRoute: typeof OverlaysOverlaySessionIdWaitingForNextRoute
  OverlaysOverlaySessionIdVictoryWinnerRoute: typeof OverlaysOverlaySessionIdVictoryWinnerRoute
}

const OverlaysOverlayRouteChildren: OverlaysOverlayRouteChildren = {
  OverlaysOverlaySessionIdBrbRoute: OverlaysOverlaySessionIdBrbRoute,
  OverlaysOverlaySessionIdCastersRoute: OverlaysOverlaySessionIdCastersRoute,
  OverlaysOverlaySessionIdCastersSingleCameraRoute:
    OverlaysOverlaySessionIdCastersSingleCameraRoute,
  OverlaysOverlaySessionIdMapsRoute: OverlaysOverlaySessionIdMapsRoute,
  OverlaysOverlaySessionIdMatchRoute: OverlaysOverlaySessionIdMatchRoute,
  OverlaysOverlaySessionIdSingleCameraRoute:
    OverlaysOverlaySessionIdSingleCameraRoute,
  OverlaysOverlaySessionIdStartingSoonRoute:
    OverlaysOverlaySessionIdStartingSoonRoute,
  OverlaysOverlaySessionIdThanksRoute: OverlaysOverlaySessionIdThanksRoute,
  OverlaysOverlaySessionIdWaitingForNextRoute:
    OverlaysOverlaySessionIdWaitingForNextRoute,
  OverlaysOverlaySessionIdVictoryWinnerRoute:
    OverlaysOverlaySessionIdVictoryWinnerRoute,
}

const OverlaysOverlayRouteWithChildren = OverlaysOverlayRoute._addFileChildren(
  OverlaysOverlayRouteChildren,
)

interface OverlaysRouteChildren {
  OverlaysOverlayRoute: typeof OverlaysOverlayRouteWithChildren
}

const OverlaysRouteChildren: OverlaysRouteChildren = {
  OverlaysOverlayRoute: OverlaysOverlayRouteWithChildren,
}

const OverlaysRouteWithChildren = OverlaysRoute._addFileChildren(
  OverlaysRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof DashboardRouteWithChildren
  '/new': typeof NewRoute
  '/manageCasters': typeof DashboardManageCastersRoute
  '/manageTeams': typeof DashboardManageTeamsRoute
  '/overlays': typeof OverlaysOverlayRouteWithChildren
  '/session/$sessionId': typeof DashboardSessionSessionIdRoute
  '/overlays/$sessionId/brb': typeof OverlaysOverlaySessionIdBrbRoute
  '/overlays/$sessionId/casters': typeof OverlaysOverlaySessionIdCastersRoute
  '/overlays/$sessionId/castersSingleCamera': typeof OverlaysOverlaySessionIdCastersSingleCameraRoute
  '/overlays/$sessionId/maps': typeof OverlaysOverlaySessionIdMapsRoute
  '/overlays/$sessionId/match': typeof OverlaysOverlaySessionIdMatchRoute
  '/overlays/$sessionId/singleCamera': typeof OverlaysOverlaySessionIdSingleCameraRoute
  '/overlays/$sessionId/startingSoon': typeof OverlaysOverlaySessionIdStartingSoonRoute
  '/overlays/$sessionId/thanks': typeof OverlaysOverlaySessionIdThanksRoute
  '/overlays/$sessionId/waitingForNext': typeof OverlaysOverlaySessionIdWaitingForNextRoute
  '/overlays/$sessionId/victory/$winner': typeof OverlaysOverlaySessionIdVictoryWinnerRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof DashboardRouteWithChildren
  '/new': typeof NewRoute
  '/manageCasters': typeof DashboardManageCastersRoute
  '/manageTeams': typeof DashboardManageTeamsRoute
  '/overlays': typeof OverlaysOverlayRouteWithChildren
  '/session/$sessionId': typeof DashboardSessionSessionIdRoute
  '/overlays/$sessionId/brb': typeof OverlaysOverlaySessionIdBrbRoute
  '/overlays/$sessionId/casters': typeof OverlaysOverlaySessionIdCastersRoute
  '/overlays/$sessionId/castersSingleCamera': typeof OverlaysOverlaySessionIdCastersSingleCameraRoute
  '/overlays/$sessionId/maps': typeof OverlaysOverlaySessionIdMapsRoute
  '/overlays/$sessionId/match': typeof OverlaysOverlaySessionIdMatchRoute
  '/overlays/$sessionId/singleCamera': typeof OverlaysOverlaySessionIdSingleCameraRoute
  '/overlays/$sessionId/startingSoon': typeof OverlaysOverlaySessionIdStartingSoonRoute
  '/overlays/$sessionId/thanks': typeof OverlaysOverlaySessionIdThanksRoute
  '/overlays/$sessionId/waitingForNext': typeof OverlaysOverlaySessionIdWaitingForNextRoute
  '/overlays/$sessionId/victory/$winner': typeof OverlaysOverlaySessionIdVictoryWinnerRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_dashboard': typeof DashboardRouteWithChildren
  '/new': typeof NewRoute
  '/_dashboard/manageCasters': typeof DashboardManageCastersRoute
  '/_dashboard/manageTeams': typeof DashboardManageTeamsRoute
  '/overlays': typeof OverlaysRouteWithChildren
  '/overlays/_overlay': typeof OverlaysOverlayRouteWithChildren
  '/_dashboard/session/$sessionId': typeof DashboardSessionSessionIdRoute
  '/overlays/_overlay/$sessionId/brb': typeof OverlaysOverlaySessionIdBrbRoute
  '/overlays/_overlay/$sessionId/casters': typeof OverlaysOverlaySessionIdCastersRoute
  '/overlays/_overlay/$sessionId/castersSingleCamera': typeof OverlaysOverlaySessionIdCastersSingleCameraRoute
  '/overlays/_overlay/$sessionId/maps': typeof OverlaysOverlaySessionIdMapsRoute
  '/overlays/_overlay/$sessionId/match': typeof OverlaysOverlaySessionIdMatchRoute
  '/overlays/_overlay/$sessionId/singleCamera': typeof OverlaysOverlaySessionIdSingleCameraRoute
  '/overlays/_overlay/$sessionId/startingSoon': typeof OverlaysOverlaySessionIdStartingSoonRoute
  '/overlays/_overlay/$sessionId/thanks': typeof OverlaysOverlaySessionIdThanksRoute
  '/overlays/_overlay/$sessionId/waitingForNext': typeof OverlaysOverlaySessionIdWaitingForNextRoute
  '/overlays/_overlay/$sessionId/victory/$winner': typeof OverlaysOverlaySessionIdVictoryWinnerRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/new'
    | '/manageCasters'
    | '/manageTeams'
    | '/overlays'
    | '/session/$sessionId'
    | '/overlays/$sessionId/brb'
    | '/overlays/$sessionId/casters'
    | '/overlays/$sessionId/castersSingleCamera'
    | '/overlays/$sessionId/maps'
    | '/overlays/$sessionId/match'
    | '/overlays/$sessionId/singleCamera'
    | '/overlays/$sessionId/startingSoon'
    | '/overlays/$sessionId/thanks'
    | '/overlays/$sessionId/waitingForNext'
    | '/overlays/$sessionId/victory/$winner'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/new'
    | '/manageCasters'
    | '/manageTeams'
    | '/overlays'
    | '/session/$sessionId'
    | '/overlays/$sessionId/brb'
    | '/overlays/$sessionId/casters'
    | '/overlays/$sessionId/castersSingleCamera'
    | '/overlays/$sessionId/maps'
    | '/overlays/$sessionId/match'
    | '/overlays/$sessionId/singleCamera'
    | '/overlays/$sessionId/startingSoon'
    | '/overlays/$sessionId/thanks'
    | '/overlays/$sessionId/waitingForNext'
    | '/overlays/$sessionId/victory/$winner'
  id:
    | '__root__'
    | '/'
    | '/_dashboard'
    | '/new'
    | '/_dashboard/manageCasters'
    | '/_dashboard/manageTeams'
    | '/overlays'
    | '/overlays/_overlay'
    | '/_dashboard/session/$sessionId'
    | '/overlays/_overlay/$sessionId/brb'
    | '/overlays/_overlay/$sessionId/casters'
    | '/overlays/_overlay/$sessionId/castersSingleCamera'
    | '/overlays/_overlay/$sessionId/maps'
    | '/overlays/_overlay/$sessionId/match'
    | '/overlays/_overlay/$sessionId/singleCamera'
    | '/overlays/_overlay/$sessionId/startingSoon'
    | '/overlays/_overlay/$sessionId/thanks'
    | '/overlays/_overlay/$sessionId/waitingForNext'
    | '/overlays/_overlay/$sessionId/victory/$winner'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  NewRoute: typeof NewRoute
  OverlaysRoute: typeof OverlaysRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRouteWithChildren,
  NewRoute: NewRoute,
  OverlaysRoute: OverlaysRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_dashboard",
        "/new",
        "/overlays"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_dashboard": {
      "filePath": "_dashboard.tsx",
      "children": [
        "/_dashboard/manageCasters",
        "/_dashboard/manageTeams",
        "/_dashboard/session/$sessionId"
      ]
    },
    "/new": {
      "filePath": "new.tsx"
    },
    "/_dashboard/manageCasters": {
      "filePath": "_dashboard/manageCasters.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/manageTeams": {
      "filePath": "_dashboard/manageTeams.tsx",
      "parent": "/_dashboard"
    },
    "/overlays": {
      "filePath": "overlays",
      "children": [
        "/overlays/_overlay"
      ]
    },
    "/overlays/_overlay": {
      "filePath": "overlays/_overlay.tsx",
      "parent": "/overlays",
      "children": [
        "/overlays/_overlay/$sessionId/brb",
        "/overlays/_overlay/$sessionId/casters",
        "/overlays/_overlay/$sessionId/castersSingleCamera",
        "/overlays/_overlay/$sessionId/maps",
        "/overlays/_overlay/$sessionId/match",
        "/overlays/_overlay/$sessionId/singleCamera",
        "/overlays/_overlay/$sessionId/startingSoon",
        "/overlays/_overlay/$sessionId/thanks",
        "/overlays/_overlay/$sessionId/waitingForNext",
        "/overlays/_overlay/$sessionId/victory/$winner"
      ]
    },
    "/_dashboard/session/$sessionId": {
      "filePath": "_dashboard/session.$sessionId.tsx",
      "parent": "/_dashboard"
    },
    "/overlays/_overlay/$sessionId/brb": {
      "filePath": "overlays/_overlay.$sessionId/brb.tsx",
      "parent": "/overlays/_overlay"
    },
    "/overlays/_overlay/$sessionId/casters": {
      "filePath": "overlays/_overlay.$sessionId/casters.tsx",
      "parent": "/overlays/_overlay"
    },
    "/overlays/_overlay/$sessionId/castersSingleCamera": {
      "filePath": "overlays/_overlay.$sessionId/castersSingleCamera.tsx",
      "parent": "/overlays/_overlay"
    },
    "/overlays/_overlay/$sessionId/maps": {
      "filePath": "overlays/_overlay.$sessionId/maps.tsx",
      "parent": "/overlays/_overlay"
    },
    "/overlays/_overlay/$sessionId/match": {
      "filePath": "overlays/_overlay.$sessionId/match.tsx",
      "parent": "/overlays/_overlay"
    },
    "/overlays/_overlay/$sessionId/singleCamera": {
      "filePath": "overlays/_overlay.$sessionId/singleCamera.tsx",
      "parent": "/overlays/_overlay"
    },
    "/overlays/_overlay/$sessionId/startingSoon": {
      "filePath": "overlays/_overlay.$sessionId/startingSoon.tsx",
      "parent": "/overlays/_overlay"
    },
    "/overlays/_overlay/$sessionId/thanks": {
      "filePath": "overlays/_overlay.$sessionId/thanks.tsx",
      "parent": "/overlays/_overlay"
    },
    "/overlays/_overlay/$sessionId/waitingForNext": {
      "filePath": "overlays/_overlay.$sessionId/waitingForNext.tsx",
      "parent": "/overlays/_overlay"
    },
    "/overlays/_overlay/$sessionId/victory/$winner": {
      "filePath": "overlays/_overlay.$sessionId/victory.$winner.tsx",
      "parent": "/overlays/_overlay"
    }
  }
}
ROUTE_MANIFEST_END */
